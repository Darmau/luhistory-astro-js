---
import {sanityClient} from "sanity:client";
import {Image} from 'astro:assets';

const homepageData = await sanityClient.fetch(`
  *[_type == 'homepage']{
    slogan,
    "image": cover.asset->{url}
  }`)

const headerString = homepageData[0].slogan.split(', ');
---
  <div class = "container invisible col-start-2 col-span-10 flex px-4 items-center justify-between mb-16">
    <h1
      class = "z-10 font-bold font-serif leading-tight text-6xl md:text-8xl mr-[-50%]"
      id = "hero-text"
    >
      {headerString.map((word, index) => {
        return (
          <span class = "block" style = {{'--delay': `${index * 0.1}s`}}>
          {word}{index < headerString.length - 1 && <span>,</span>}
        </span>
        )
      })}
    </h1>
    <Image
      src = {homepageData[0].image.url}
      alt = {homepageData[0].slogan}
      class = "hero-img z-0 aspect-[3/4] w-3/5 md:w-1/2 object-cover brightness-95"
      id = "hero-img"
      width = "528"
      height = "704"
    />
  </div>

<style>
  .hero-img {
    min-height: 560px;
    min-width: 360px;
  }

  .container {
    transition: all 0.5s ease-in-out;
  }

  .invisible {
    translate: 0 32px;
    opacity: 0;
  }

  .visible {
    opacity: 1;
  }
</style>

<script>
  // 选择container，在进入viewport的时候添加class
  function showContainer() {
    const container = document.querySelector('.container');
    const options = {
      root: null,
      rootMargin: '0px',
      threshold: 0.1
    };

    const observer = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
          entry.target.classList.remove('invisible');
        } else {
          entry.target.classList.remove('visible');
          entry.target.classList.add('invisible');
        }
      });
    }, options);

    observer.observe(container);
  }

  document.addEventListener('DOMContentLoaded', showContainer);
  document.addEventListener('astro:after-swap', showContainer);
</script>
