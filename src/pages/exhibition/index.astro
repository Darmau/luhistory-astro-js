---
import Layout from "../../layouts/Layout.astro";
import {sanityClient} from "sanity:client";
const exhibitionRawData = await sanityClient.fetch(`
  *[_type == 'exhibition' && defined(dateRange) && defined(cover)]|order(dateRange.endDate desc){
    title,
    "year": dateRange.startDate,
    "city": location.city,
    "slug": slug.current
}`);

// 提取出exhibitionRawData.year中的年份，并分别添加到exhibitions中，形成对象嵌套数组。如：exhibitions = {2019: [{}, {}, {}], 2020: [{}, {}, {}]}
const exhibitions = {};
exhibitionRawData.forEach((exhibition) => {
  const year = exhibition.year.split("-")[0];
  if (exhibitions[year]) {
    exhibitions[year].push(exhibition);
  } else {
    exhibitions[year] = [exhibition];
  }
});
---
<Layout>
  <hgroup class="exhibition-grid mb-44">
    <div></div>
    <h1 class="font-serif font-bold text-neutral-900 text-9xl">Exhibitions</h1>
  </hgroup>
  <div class="mb-40">
    {
      Object.keys(exhibitions).map((year) => (
        <div class="exhibition-grid">
          <h2 class="font-serif font-bold proportional-nums text-3xl tracking-wider py-6">{year}</h2>
          <ul class="flex-1">
            {
              exhibitions[year].map((exhibition) => (
                <li class="flex justify-between items-center py-6 border-b border-neutral-900 text-neutral-900">
                  <a
                    href={`/exhibition/detail/${exhibition.slug}`}
                    class="font-serif font-bold proportional-nums text-3xl text-neutral-900"
                  >
                    {exhibition.title}
                  </a>
                  <p class="font-sans text-base font-normal text-neutral-900 opacity-50">{exhibition.city}</p>
                </li>
              ))
            }
          </ul>
        </div>
      ))
    }
  </div>
</Layout>

<style>
  .exhibition-grid {
    display: grid;
    grid-template-columns: 208px 1fr;
  }
</style>
